/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
//import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
//import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
//import com.bmuschko.gradle.docker.tasks.image.DockerRemoveImage
//import org.apache.tools.ant.BuildException
//import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'io.github.robwin:jgitflow-gradle-plugin:0.5.0'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'checkstyle'
    id 'pmd'
    id 'findbugs'
    id 'jacoco'
    id 'maven-publish'
    id 'org.springframework.boot'               version '1.5.2.RELEASE'
    id 'com.jfrog.artifactory'                  version '4.4.14'
    id 'com.bmuschko.docker-remote-api'         version '3.0.11'

}

apply plugin: 'io.github.robwin.jgitflow'
apply plugin: 'project-report'

/***************************
 * dependency management
 ***************************/

//sourceSets.main.java.srcDirs = []

repositories {
    mavenCentral()
    mavenCentral()
    maven { url "https://airdev.jfrog.io/airdev/libs-releases/" }
    maven { url "https://airdev.jfrog.io/airdev/libs-snapshots/" }
}

configurations {
    compile.exclude module: 'spring-boot-starter-logging'
}

dependencies {
    
    compile "org.opentestsystem.ap:ap-common:${commonVersion}"

    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile 'org.springframework.boot:spring-boot-starter-amqp'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-log4j2'
    compile 'org.springframework.boot:spring-boot-starter-freemarker'
    compile 'org.springframework.boot:spring-boot-starter-cache'
    compile 'org.springframework.boot:spring-boot-starter-data-redis'

    compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile 'org.springframework.cloud:spring-cloud-starter-feign'

    compile 'org.springframework.security.extensions:spring-security-saml2-core:1.0.2.RELEASE'
    compile 'org.springframework.retry:spring-retry'
    compile 'org.springframework.session:spring-session'

    compile 'org.eclipse.jgit:org.eclipse.jgit:4.10.0.201712302008-r'

    compile 'org.apache.commons:commons-collections4:4.1'
    compile 'org.apache.commons:commons-lang3:3.5'

    compile 'com.google.guava:guava:22.0'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'

    compile 'org.apache.logging.log4j:log4j-api:2.10.0'
    compile 'org.apache.logging.log4j:log4j-core:2.10.0'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.10.0'

    compile 'com.lmax:disruptor:3.3.7'

    compile 'io.github.openfeign:feign-gson:9.3.1'

    compile 'org.codehaus.groovy:groovy-all:2.4.15'

//    compile 'org.hibernate:hibernate-java8:5.0.12.Final'
//    compile 'com.vladmihalcea:hibernate-types-5:2.2.0'
//
//    compile 'org.postgresql:postgresql:42.2.4'

    compileOnly 'org.projectlombok:lombok'

    runtime 'org.springframework.boot:spring-boot-devtools'

    testCompile 'org.springframework.boot:spring-boot-starter-test'

    testCompile 'org.hsqldb:hsqldb'
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE'
    }
}

/***************************
 * build information
 ***************************/

springBoot {
    buildInfo()
}

processResources {
    filesMatching("**/application.yml") {
        expand project.properties
    }
}
