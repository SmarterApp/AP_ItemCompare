package org.opentestsystem.ap.itemcompare;

import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.itemcompare.service.CompareService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.scheduling.annotation.EnableAsync;
import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;

import java.util.concurrent.Executor;

import static java.lang.System.exit;

@Slf4j
@EnableAsync
@SpringBootApplication
@ComponentScan(basePackages = {"org.opentestsystem.ap.itemcompare", "org.opentestsystem.ap.common"})
public class ItemCompareApplication implements CommandLineRunner {

    static {
        System.setProperty("javax.xml.bind.context.factory", "org.eclipse.persistence.jaxb.JAXBContextFactory");
        System.setProperty("log4j2.contextSelector", "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector");
    }

    @Autowired
    private ApplicationProperties applicationProperties;

    @Autowired
    private CompareService compareService;

    public static void main(String[] args) {
        SpringApplication app = new SpringApplication(ItemCompareApplication.class);
        app.run(args);
    }

    @Bean
    public Executor asyncExecutor() {
        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();
        executor.setCorePoolSize(applicationProperties.getNumberOfThreads());
        executor.setMaxPoolSize(applicationProperties.getNumberOfThreads());
        executor.setThreadNamePrefix("Migrate-");
        return executor;
    }

    @Override
    public void run(String... args) throws Exception {
        this.compare();
        exit(0);
    }

    private void compare() {
        this.compareService.compare();
    }



}
