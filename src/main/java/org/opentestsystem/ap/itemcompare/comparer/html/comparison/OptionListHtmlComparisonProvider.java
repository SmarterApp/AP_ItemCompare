package org.opentestsystem.ap.itemcompare.comparer.html.comparison;

import org.opentestsystem.ap.common.saaif.item.ItemRelease;

import java.util.ArrayList;
import java.util.List;

import static org.apache.commons.lang3.StringUtils.isBlank;
import static org.apache.commons.lang3.StringUtils.trimToEmpty;

/**
 * Abstract class for item types that support {@link org.opentestsystem.ap.common.saaif.item.ItemRelease.Item.Content.Optionlist}
 */
abstract class OptionListHtmlComparisonProvider implements ItemTypeHtmlComparisonProvider {
    /**
     * Appends {@link HtmlComparison} for an item's {@link org.opentestsystem.ap.common.saaif.item.ItemRelease.Item.Content.Optionlist}
     *
     * @param context           the {@link org.opentestsystem.ap.common.saaif.ItemContext} to add comparisons
     * @param sourceItemOptions the source options
     * @param testItemOptions   the test options
     */
    void appendItemOptionHtmlComparisons(final ItemTypeHtmlComparisonContext context,
                                         final List<ItemRelease.Item.Content.Optionlist.Option> sourceItemOptions,
                                         final List<ItemRelease.Item.Content.Optionlist.Option> testItemOptions) {
        for (int i = 0; i < sourceItemOptions.size(); i++) {
            ItemRelease.Item.Content.Optionlist.Option sourceOption = sourceItemOptions.get(i);
            String testOptionHtml = testItemOptions.size() <= i ? null : trimToEmpty(testItemOptions.get(i).getVal());
            String sourceOptionHtml = trimToEmpty(sourceOption.getVal());
            if (isBlank(sourceOptionHtml) && isBlank(testOptionHtml)) {
                continue;
            }

            context.getComparisons().add(HtmlComparison.builder()
                .location(context.getLanguage() + " Option " + sourceOption.getName())
                .sourceHtml(sourceOptionHtml)
                .testHtml(testOptionHtml)
                .build());
        }

        //Handle the case where the test item has more options than the source item
        if (testItemOptions.size() > sourceItemOptions.size()) {
            for (int i = sourceItemOptions.size(); i < testItemOptions.size(); i++) {
                ItemRelease.Item.Content.Optionlist.Option testOption = testItemOptions.get(i);
                context.getComparisons().add(HtmlComparison.builder()
                    .location(context.getLanguage() + " Option " + testOption.getName())
                    .sourceHtml(null)
                    .testHtml(testOption.getVal())
                    .build());
            }
        }
    }

    /**
     * Retrieves the {@link org.opentestsystem.ap.common.saaif.item.ItemRelease.Item.Content.Optionlist} options from
     * the item handling nulls
     *
     * @param content the {@link org.opentestsystem.ap.common.saaif.item.ItemRelease.Item.Content} containing options
     * @return the options or an empty List if any part of the object hierarchy is null
     */
    List<ItemRelease.Item.Content.Optionlist.Option> getOptions(ItemRelease.Item.Content content) {
        if (content.getOptionlist() == null || content.getOptionlist().getOption() == null) {
            return new ArrayList<>();
        }

        return content.getOptionlist().getOption();
    }
}
