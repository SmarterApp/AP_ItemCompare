package org.opentestsystem.ap.itemcompare.comparer.html.comparison;

import org.apache.commons.lang.StringUtils;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;
import org.springframework.stereotype.Component;

import static org.apache.commons.lang3.StringUtils.isBlank;
import static org.opentestsystem.ap.common.model.ModelConstants.ItemType.TYPE_EBSR;
import static org.opentestsystem.ap.common.model.ModelConstants.ItemType.TYPE_MI;

/**
 * Handles finding the HTML content within the qti element.
 */
@Component
public class DefaultQtiHtmlComparisonProvider implements ItemTypeHtmlComparisonProvider {
    @Override
    public void appendComparisons(ItemTypeHtmlComparisonContext context,
                                  ItemRelease.Item.Content sourceContent,
                                  ItemRelease.Item.Content testContent) {

        if (!TYPE_MI.equalsIgnoreCase(context.getItemType()) && !TYPE_EBSR.equalsIgnoreCase(context.getItemType())) {
            return;
        }

        final String sourceQti = getQtiValue(sourceContent);
        final String testQti = getQtiValue(testContent);
        if (isBlank(sourceQti) && isBlank(testQti)) {
            return;
        }

        context.getComparisons().add(HtmlComparison.builder()
            .location(context.getLanguage() + " qti")
            .sourceHtml(sourceQti)
            .testHtml(testQti)
            .build());
    }

    private String getQtiValue(ItemRelease.Item.Content content) {
        if (content == null || content.getQti() == null || content.getQti().getValue() == null) {
            return "";
        }

        return StringUtils.trimToEmpty(content.getQti().getValue());
    }
}
