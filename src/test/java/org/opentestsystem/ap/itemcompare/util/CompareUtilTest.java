package org.opentestsystem.ap.itemcompare.util;

import lombok.extern.slf4j.Slf4j;
import org.apache.commons.io.FileUtils;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.runners.MockitoJUnitRunner;
import org.opentestsystem.ap.itemcompare.report.CompareReport;

import java.io.File;
import java.net.URISyntaxException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Arrays;
import java.util.List;

@Slf4j
@RunWith(MockitoJUnitRunner.class)
public class CompareUtilTest {

    @Test
    public void createSummaryReport() {
        try {
            List<String> includedItems = Arrays.asList("2836", "11065", "11417", "18786", "25265", "45990", "51576", "76749");
            Path resourceFiles = getFileFromResources("report-files/tims-compare").toPath();
            Path tempDirectory = Files.createTempDirectory("item-compare-");
            FileUtils.copyDirectory(resourceFiles.toFile(), tempDirectory.toFile());
            CompareReport compareReport = new CompareReport(tempDirectory);
            compareReport.setSummaryReportFileName("summary-report.csv");
            compareReport.setCompareReportLogFileName("summary-report.log");

            CompareUtil.createSummaryReport(compareReport, includedItems);

            log.info(tempDirectory.toString());

        } catch (Exception ex) {
            log.error("Unable to create temp directory", ex);
        }
    }

    private File getFileFromResources(String resourcesLocation) {
        URL url = this.getClass().getClassLoader().getResource(resourcesLocation);
        File file;
        try {
            file = new File(url.toURI());
        } catch (URISyntaxException e) {
            file = new File(url.getPath());
        }
        return file;
    }
}
