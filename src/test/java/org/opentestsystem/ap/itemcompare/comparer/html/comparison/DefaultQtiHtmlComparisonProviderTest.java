package org.opentestsystem.ap.itemcompare.comparer.html.comparison;

import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;

import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.ap.common.model.ModelConstants.ItemType.TYPE_EBSR;

public class DefaultQtiHtmlComparisonProviderTest {
    private DefaultQtiHtmlComparisonProvider provider;

    private ItemRelease.Item.Content sourceContent;
    private ItemRelease.Item.Content testContent;
    private ItemTypeHtmlComparisonContext context;

    @Before
    public void setUp() {
        provider = new DefaultQtiHtmlComparisonProvider();
        sourceContent = new ItemRelease.Item.Content();
        sourceContent.setQti(new ItemRelease.Item.Content.Qti());
        testContent = new ItemRelease.Item.Content();
        testContent.setQti(new ItemRelease.Item.Content.Qti());
        context = new ItemTypeHtmlComparisonContext();
        context.setLanguage("Language");
    }

    @Test
    public void shouldIgnoreUnsupportedItems() {
        context.setItemType("SA");
        provider.appendComparisons(context, sourceContent, testContent);

        assertThat(context.getComparisons()).isEmpty();
    }

    @Test
    public void shouldIgnoreWhenQtiIsNullInBothItems() {
        context.setItemType(TYPE_EBSR);
        sourceContent.setQti(null);
        testContent.setQti(null);

        provider.appendComparisons(context, sourceContent, testContent);

        assertThat(context.getComparisons()).isEmpty();
    }

    @Test
    public void shouldReadQtiWhenPresent() {
        context.setItemType(TYPE_EBSR);

        sourceContent.getQti().setValue("  <p>source</p>");
        testContent.getQti().setValue("<p>test</p>  ");

        provider.appendComparisons(context, sourceContent, testContent);

        assertThat(context.getComparisons()).hasSize(1);

        HtmlComparison comparison = context.getComparisons().get(0);

        assertThat(comparison.getSourceHtml().get()).isEqualTo("<p>source</p>");
        assertThat(comparison.getTestHtml().get()).isEqualTo("<p>test</p>");
        assertThat(comparison.getLocation()).isEqualTo("Language qti");
    }
}