package org.opentestsystem.ap.itemcompare.service;

import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableSet;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.rules.TemporaryFolder;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Spy;
import org.mockito.runners.MockitoJUnitRunner;
import org.opentestsystem.ap.itemcompare.ApplicationProperties;
import org.opentestsystem.ap.itemcompare.comparer.ItemComparer;
import org.opentestsystem.ap.itemcompare.model.CompareContext;
import org.opentestsystem.ap.itemcompare.report.ReportWriter;

import java.nio.file.Files;
import java.nio.file.Path;
import java.util.stream.Collectors;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.opentestsystem.ap.itemcompare.CompareModelSupport.compareContext;

@RunWith(MockitoJUnitRunner.class)
public class DefaultReportServiceTest {

    @Rule
    public TemporaryFolder folder = new TemporaryFolder();

    @Rule
    public final ExpectedException thrown = ExpectedException.none();

    @Spy
    private ApplicationProperties applicationProperties = new ApplicationProperties();

    @InjectMocks
    private DefaultReportService service;

    private Path reportFolder;

    @Before
    public void setup() throws Exception {
        reportFolder = folder.newFolder().toPath();
        applicationProperties.setReportBaseDir(reportFolder.toString());
    }

    @Test
    public void itShouldCreateASummaryReportWriter() throws Exception {
        final ItemComparer comparer = mock(ItemComparer.class);
        when(comparer.getDifferenceTypes()).thenReturn(ImmutableList.of("DIFF_A", "DIFF_B"));

        try (final ReportWriter summaryWriter = service.getSummaryReportWriter("test", ImmutableSet.of(comparer))) {
            final CompareContext compareContext = compareContext("123");
            summaryWriter.writeDifferences(compareContext);
        }

        assertThat(Files.list(reportFolder.resolve("test")).collect(Collectors.toList()))
            .containsOnly(reportFolder.resolve("test").resolve("summary.csv"));
    }

    @Test
    public void itShouldCreateAnItemDifferenceReportWriter() throws Exception {
        try (final ReportWriter differenceWriter = service.getItemReportWriter("test", "123")) {
            final CompareContext compareContext = compareContext("123");
            differenceWriter.writeDifferences(compareContext);
        }

        assertThat(Files.list(reportFolder.resolve("test")).collect(Collectors.toList()))
            .containsOnly(reportFolder.resolve("test").resolve("123.csv"));
    }

}